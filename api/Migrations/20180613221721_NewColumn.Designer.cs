// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebApi.Entities;

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180613221721_NewColumn")]
    partial class NewColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("WebApi.Entities.auth_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("auth_user_level");

                    b.Property<int>("auth_user_role_id");

                    b.Property<int>("employee_id");

                    b.Property<byte[]>("password_hash");

                    b.Property<byte[]>("password_salt");

                    b.Property<string>("username");

                    b.HasKey("id");

                    b.ToTable("auth_users");
                });

            modelBuilder.Entity("WebApi.Entities.auth_user_role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name")
                        .IsRequired();

                    b.HasKey("id");

                    b.ToTable("auth_user_roles");
                });

            modelBuilder.Entity("WebApi.Entities.client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("active");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("WebApi.Entities.employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("code");

                    b.Property<int>("created_by_id");

                    b.Property<DateTime>("data_of_birth");

                    b.Property<DateTime>("date_created");

                    b.Property<DateTime>("date_modified");

                    b.Property<string>("email_address");

                    b.Property<int>("employee_status_id");

                    b.Property<int>("gender_id");

                    b.Property<string>("given_name");

                    b.Property<string>("mobile_number");

                    b.Property<int>("modified_by_id");

                    b.Property<string>("other_given_name");

                    b.Property<string>("prefix");

                    b.Property<string>("suffix");

                    b.Property<string>("surname");

                    b.Property<string>("tfn");

                    b.Property<int>("work_type_id");

                    b.HasKey("id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("WebApi.Entities.employment_type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("active");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("employment_types");
                });

            modelBuilder.Entity("WebApi.Entities.Lookup", b =>
                {
                    b.Property<int>("lookup_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("lookup_name");

                    b.HasKey("lookup_id");

                    b.ToTable("Lookups");
                });

            modelBuilder.Entity("WebApi.Entities.project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("client_id");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("WebApi.Entities.task", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<float?>("actualWorkHours");

                    b.Property<int?>("actualWorkUnit_id");

                    b.Property<int?>("client_id");

                    b.Property<DateTime?>("dateComplete");

                    b.Property<DateTime?>("dateDue");

                    b.Property<DateTime?>("dateReminder");

                    b.Property<DateTime?>("dateStart");

                    b.Property<string>("description");

                    b.Property<bool?>("hasReminder");

                    b.Property<int?>("project_id");

                    b.Property<int?>("status_id");

                    b.Property<string>("subject")
                        .IsRequired();

                    b.Property<DateTime?>("timeReminder");

                    b.Property<float?>("totalWorkHours");

                    b.Property<int?>("totalWorkUnit_id");

                    b.Property<int?>("user_id");

                    b.HasKey("id");

                    b.ToTable("tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
